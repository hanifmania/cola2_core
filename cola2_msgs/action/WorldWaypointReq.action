# Define the goal
# Common waypoint details
auv_msgs/GoalDescriptor goal

# If true, maintain Z position relative to altitude, otherwise depth.
bool altitude_mode

auv_msgs/NED position
float32 altitude
auv_msgs/RPY orientation

# Axes of control to disable, in body frame. (for GOTO X-Z-YAW enable x and z)
auv_msgs/Bool6Axis disable_axis

# Tolerances are in body frame, zero indicates pilot default should be used.
geometry_msgs/Vector3 position_tolerance
auv_msgs/RPY orientation_tolerance

# Available modes are: (OBSOLETE!!! REPLACED BY controller_type)
# - If ABSOLUTE_X_Z_YAW mode then: 'los' (if Line of Sight), whatever if waypoint.
# - If ABSOLUTE_X_Y_Z_YAW mode then: 'neverending' if the action only finalizes when preempted
#                                    or whatever to finalize when the goal is reached.
string mode

# Controller type
uint64 controller_type
uint64 GOTO=0       # Controls z, yaw and surge
uint64 HOLONOMIC=1  # Controls x, y, z and yaw


# Max time to achieve waypoint. If timeout <= 0, time is not finite.
int16 timeout
---

# Define the result
# If true, maintain Z position relative to altitude, otherwise depth.
bool altitude_mode

auv_msgs/NED position
float32 altitude
auv_msgs/RPY orientation

uint64 final_status
uint64 SUCCESS=0
uint64 TIMEOUT=1
uint64 FAILURE=2

---

# Define a feedback message
# If true, maintain Z position relative to altitude, otherwise depth.
bool altitude_mode
auv_msgs/NED position
float32 altitude
auv_msgs/RPY orientation
float64 distance_to_waypoint
