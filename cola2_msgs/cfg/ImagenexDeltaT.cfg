#!/usr/bin/env python
# Copyright (c) 2017 Iqua Robotics SL - All Rights Reserved
#
# This file is subject to the terms and conditions defined in file
# 'LICENSE.txt', which is part of this source code package.


PACKAGE = "cola2_msgs"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

range_enum = gen.enum([gen.const("m", int_t, 5, ""),
                       gen.const("m", int_t, 10, ""),
                       gen.const("m", int_t, 20, ""),
                       gen.const("m", int_t, 30, ""),
                       gen.const("m", int_t, 40, ""),
                       gen.const("m", int_t, 50, ""),
                       gen.const("m", int_t, 60, ""),
                       gen.const("m", int_t, 80, ""),
                       gen.const("m", int_t, 100, "")
                       ], "Range selector")

gen.add("range", int_t, 0, "Range", 10, 5, 100, edit_method=range_enum)

gen.add("gain", int_t, 0, "Gain", 10, 0, 20)

sector_size_enum = gen.enum([gen.const("degrees", int_t, 30, ""),
                       gen.const("degrees", int_t, 60, ""),
                       gen.const("degrees", int_t, 90, ""),
                       gen.const("degrees", int_t, 120, "")
                       ], "Sector Size selector")

gen.add("sector_size", int_t, 0, "Sector size", 120, 30, 120, edit_method=sector_size_enum)

beamwidth_enum = gen.enum([gen.const("Wide", int_t, 0, ""),
                       gen.const("Normal", int_t, 1, ""),
                       gen.const("Narrow", int_t, 2, ""),
                       gen.const("Narrow_Mixed", int_t, 3, "")
                       ], "BeamWidth selector")

gen.add("beamwidth", int_t, 0, "Beamwidth", 1, 0, 3, edit_method=beamwidth_enum)

nbeams_enum = gen.enum([gen.const("beams", int_t, 120, ""),
                       gen.const("beams", int_t, 240, ""),
                       gen.const("beams", int_t, 480, ""),
                       ], "NBeams selector")

gen.add("nbeams", int_t, 0, "Number of beams", 480, 120, 480, edit_method=nbeams_enum)

averaging_enum = gen.enum([gen.const("pings", int_t, 3, ""),
                       gen.const("pings", int_t, 5, ""),
                       gen.const("pings", int_t, 7, ""),
                       gen.const("pings", int_t, 9, "")
                       ], "Averaging selector")

gen.add("averaging", int_t, 0, "Beam averaging", 5, 3, 9, edit_method=averaging_enum)

gen.add("record_837", bool_t, 0, "Record 837", True)

profilepointfilter_enum = gen.enum([gen.const("First_Return", int_t, 0, ""),
                       gen.const("Maximum_Return", int_t, 1, ""),
                       gen.const("Bottom_Following", int_t, 2, "")
                       ], "Profile point filter selector")

gen.add("profile_point_filter", int_t, 0, "Profile point filter", 0, 0, 2, edit_method=profilepointfilter_enum)

exit(gen.generate(PACKAGE, "imagenex_multibeam_sonar", "ImagenexDeltaT"))

